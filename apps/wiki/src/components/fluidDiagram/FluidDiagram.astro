---
interface Props {
  tokenName: string;
  fluidTokens: Record<string, string>;
}

const { tokenName, fluidTokens } = Astro.props;
---

<canvas
  id="fluid"
  width="400"
  height="400"
  style="max-width: 100%;"
  data-token-name={tokenName}
  data-fluid-tokens={JSON.stringify(fluidTokens)}></canvas>

<script>
  import { drawSlope } from "./fluidDiagram.ts";

  const canvas = document.querySelector<HTMLCanvasElement>("#fluid");
  if (!canvas) throw new Error("No canvas found");
  const tokenName = canvas.getAttribute("data-token-name");
  const fluidTokensString = canvas.getAttribute("data-fluid-tokens");
  if (!tokenName || !fluidTokensString)
    throw new Error("Missing data attributes");
  const fluidTokens = JSON.parse(fluidTokensString);
  const ranges = Object.keys(fluidTokens).map((key) => {
    const [min, max] = key.split("-").map((string) => Number(string));
    return [min, max];
  });
  const rangeMax = Math.max(...ranges.flat());
  ranges.forEach(([min, max]) =>
    drawSlope(`${min}px`, `${max}px`, min / rangeMax, max / rangeMax)
  );
</script>
